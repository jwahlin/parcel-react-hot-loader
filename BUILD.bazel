load(
    "@build_bazel_rules_nodejs//:defs.bzl",
    "nodejs_binary",
)

# filegroup(
#     name = "react_sources",
#     srcs = glob(
#         [
#             "src/**",
#             "public/**",
#             "*",
#             # "node_modules/**"
#         ],
#         exclude = [
#             "**/test/**",
#             # "node_modules/**/test/**",
#             # "node_modules/**/examples/**",
#             # "node_modules/**/docs/**",
#         ],
#     ),
# )

filegroup(
    name = "react_sources",
    srcs = glob(
        [
            "src/**",
            "public/**",
            "package.json",
            "yarn.lock",
            "node_modules/**",
        ],
        exclude = [
            "**/test/**",
        ],
    ),
)

nodejs_binary(
    name = "parcel_bin",
    # args = [
    #     "build",
    #     "./public/index.html",
    #     "--public-url",
    #     "./",
    # ],
    data = [
        ":react_sources",
        # "@yarn_install//:node_modules",
    ],
    entry_point = "parcel-bundler/bin/cli.js",
    node_modules = "@yarn_install//:node_modules",
    visibility = ["//visibility:public"],
)

genrule(
    name = "parcel",
    srcs = [
        ":react_sources",
        # "@yarn_install//:node_modules",
    ],
    outs = [
        # "dist/index.html",
        # "dist/514e40413f71c00a10a6aa39d5bc719c.ico",
        "bundle",
        # "dist",
    ],
    # cmd = "$(location :parcel_bin) build ./public/index.html",
    cmd = "$(location :parcel_bin) build ./public/index.html --out-dir=$(location bundle)",
    # cmd = "$(location :parcel_bin) build ./public/index.html",
    # cmd = "$(location :parcel_bin) build ./public/index.html --public-url ./",
    tools = [":parcel_bin"],
)

# TODO: start node js server to serve files
# nodejs_binary(
#     name = "parcel_bin",
#     # args = [
#     #     "build",
#     #     "./public/index.html",
#     #     "--public-url",
#     #     "./",
#     # ],
#     data = [
#         ":react_sources",
#         # "@yarn_install//:node_modules",
#     ],
#     entry_point = "parcel-bundler/bin/cli.js",
#     node_modules = "@yarn_install//:node_modules",
#     visibility = ["//visibility:public"],
# )

# genrule(
#     name = "lms",
#     srcs = [
#         "//:package.json",
#         "@npm_install//:node_modules/react-scripts/config/webpack.config.prod.js",
#         "@npm_install//:node_modules/.bin/react-scripts",
#         glob(["@npm_install//:node_modules/**"]),
#         ":react-sources",
#         ],
#     outs = ["jk"],
#     cmd = "$(location @npm_install//:node_modules/.bin/react-scripts) build",

#     # cmd = "ln -s $(location //:package.json) $(location @npm_install//.) && $(location @npm_install//:node_modules/.bin/react-scripts) build > $@",
#     # cmd = "echo $(location //:package.json) > $@",
#     # cmd = "ls $(location @npm_install//:node_modules/.bin/react-scripts)/.. > $@",
#     # cmd = "ln -s ./package.json external/npm_install/ && cat external/npm_install/package.json > $@",
#     # cmd = "tree > $@",
# )
